# Generated by Django 4.1.7 on 2023-04-28 14:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Feature_Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relative_benefit', models.IntegerField()),
                ('relative_penalty', models.IntegerField()),
                ('total_value', models.IntegerField()),
                ('relative_cost', models.IntegerField()),
                ('relative_risk', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Features',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=300, unique=True)),
                ('description', models.TextField()),
                ('value_percentage', models.FloatField(blank=True, null=True)),
                ('cost_percentage', models.FloatField()),
                ('risk_percentage', models.FloatField()),
                ('priority', models.FloatField()),
                ('status', models.TextField(default='Pending', max_length=20)),
                ('type', models.TextField(blank=True, max_length=20, null=True)),
                ('feature_score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ideas.feature_score')),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feasibility', models.FloatField()),
                ('market_value', models.FloatField()),
                ('cost_efective', models.FloatField()),
                ('risk', models.FloatField()),
                ('originaity', models.FloatField()),
                ('value_proposition', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('problem_to_solve', models.TextField(null=True)),
                ('progress', models.FloatField()),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('assignee', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
                ('features', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ideas.features')),
                ('files', models.ManyToManyField(to='Ideas.files')),
                ('project_manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_manager', to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(to='Ideas.tags')),
            ],
        ),
        migrations.CreateModel(
            name='Ideas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=200, unique=True)),
                ('description', models.TextField()),
                ('problem_to_solve', models.TextField(null=True)),
                ('files', models.ManyToManyField(to='Ideas.files')),
                ('score', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Ideas.score')),
                ('tags', models.ManyToManyField(to='Ideas.tags')),
            ],
        ),
    ]
